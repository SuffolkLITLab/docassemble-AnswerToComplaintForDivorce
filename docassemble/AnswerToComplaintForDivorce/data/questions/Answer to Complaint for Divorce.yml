include:
  - docassemble.MAVirtualCourt:basic-questions.yml
---
comment: |
  The metadata section controls the tab title and saved interview title. You can delete this section if you include this YAML file in another YAML file.
metadata:
  title: |
    Answer to Complaint for Divorce
  short title: |
    Divorce Answer
---
comment: |
  This section is used by MAVirtualCourts to control how some of the questions work.
mandatory: True
code: |
  interview_metadata # make sure we initialize the object
  if not defined("interview_metadata['AnswertoComplaintforDivorce']"):
    interview_metadata.initializeObject('AnswertoComplaintforDivorce')
  interview_metadata['AnswertoComplaintforDivorce'].update({
    'title': 'Answer to Complaint for Divorce',
    'short title': 'Divorce Answer',
    'description': 'This is a form that can be used to answer the allegations set out in the complaint for a divorce.',
    'original_form': '',
    'allowed courts': [
      'Probate and Family Court',
    ],
    'categories': [
      'Family Law',
    ],
    'logic block variable': 'AnswertoComplaintforDivorce',
    'attachment block variable': 'AnswertoComplaintforDivorce_attachment',
    'typical role': 'defendant',
  })
---
features:
  navigation: True
---
sections:
  - review_AnswertoComplaintforDivorce: Review your answers
---
id: interview_order_AnswertoComplaintforDivorce
code: |
  # This is a placeholder to control logic flow in this interview

  basic_questions_intro_screen 
  AnswertoComplaintforDivorce_intro
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["AnswertoComplaintforDivorce"]["allowed courts"]
  nav.set_section('review_AnswertoComplaintforDivorce')
  user_role = 'defendant'
  defendants
  complaint_file_date
  plaintiffs.gather()
  allegation_1
  allegation_2
  allegation_3
  allegation_4
  set_progress(8.33)
  allegation_5
  relief_1
  if service_ready:
    service_by
  signature_date
  set_progress(16.67)
  # Set the answer file name.
  set_parts(subtitle=str(users))
  courts[0].division
  set_progress(25.0)
  users[0].address.address
  users[0].address.unit
  set_progress(33.33)
  users[0].address.city
  users[0].address.state
  users[0].address.zip
  users[0].phone_number
  users[0].email
  set_progress(41.67)
  set_progress(50.0)
  has_attorney
  # Save (anonymized) interview statistics.
  store_variables_snapshot(data={'zip': users[0].address.zip})
  AnswertoComplaintforDivorce_preview_question # Pre-canned preview screen
  basic_questions_signature_flow
  users[0].signature
  if has_attorney:
      attorneys[0].signature 
  AnswertoComplaintforDivorce = True
---
code: |
  other_parties.there_are_any = True
  other_parties.ask_number = True
  other_parties.target_number = 1
  users.ask_number = True
  users.target_number = 1
---
code: |
  other_parties[0].name.first = plaintiff
---
comment: |
  This question is used to introduce your interview. Please customize
id: Answer to Complaint for Divorce
continue button field: AnswertoComplaintforDivorce_intro
question: |
  Answer to Complaint for Divorce
subquestion: |
  This form answers a Compaint for Divorce. It is best to have the Complaint that you were served in front of you when completing this form. 
---
id: Review your form before you sign it
continue button field: AnswertoComplaintforDivorce_preview_question
question: |
  Review your form before you sign it
subquestion: |
  Here is a preview of the form you'll sign on the next page. 
  
   ${ pdf_concatenate(AnswertoComplaintforDivorce_attachment['preview'], filename='AnswertoComplaintforDivorce.pdf')}
---
id: Complaint for Divorce Information
question: |
  Answer the following questions about the Complaint for Divorce  
subquestion: |
  All of this information is provided at the top of the Complaint.
fields:
  - "Other party's name": plaintiff
  - 'Docket number': docket_number
  - 'Date Complaint for Divorce was filed': complaint_file_date
    datatype: date
---
id: Paragraph 1 of the Complaint for Divorce
question: |
  Paragraph 1
subquestion: |
  Looking at paragrah 1 of the Complaint, decide if you agree, disagree, or do not know the information. 
fields:
  - no label: allegation_1
    datatype: radio
    choices:
      - 'I agree with that is stated in paragraph 1': admit_1
      - 'I disagree with what is stated in paragraph 1': deny_1
      - "I agree with some things that are stated in paragraph 1 but some things I disagree with or do not know": admit_but_deny_1
  - 'Include what you agree to in paragraph 1': user_admits_some_paragraph_1
    maxlength: 68
    show if:
      variable: allegation_1
      is: admit_but_deny_1
  - "Include what you disagree to or that you do not know in prargraph 1": user_denies_doesnt_know_paragraph_1
    maxlength: 66
    show if:
      variable: allegation_1
      is: admit_but_deny_1
---
id: Paragraph 2 of the Complaint for Divorce
question: |
  Paragraph 2
Subquestion: |
  Looking at paragrah 2 of the Complaint, decide if you agree, disagree, or do not know the information. 
fields:
  - no label: allegation_2
    datatype: radio
    choices:
      - 'I agree with that is stated in paragraph 2': admit_2
      - 'I disagree with what is stated in paragraph 2': deny_2
      - "I agree with some things that are stated in paragraph 2 but some things I disagree with or do not know.": admit_but_deny_2
  - 'Include what you agree to in paragraph 2': user_admits_some_paragraph_2
    maxlength: 68
    show if: 
      variable: allegation_2
      is: admit_but_deny_2
  - "Include what you disagree to or that you do not know in paragraph 2": user_denies_doesnt_know_paragraph_2
    maxlength: 66
    show if: 
      variable: allegation_2
      is: admit_but_deny_2
---
id: Paragraph 3 of the Complaint for Divorce
question: |
  Paragraph 3
Subquestion: |
  Looking at paragrah 3 of the Complaint, decide if you agree, disagree, or do not know the information. 
fields:
  - no label: allegation_3
    datatype: radio
    choices:
      - 'I agree with that is stated in paragraph 3': admit_3
      - 'I disagree with what is stated in paragraph 3': deny_3
      - "I agree with some things that are stated in paragraph 3 but some things I disagree with or do not know.": admit_but_deny_3
  - 'Include what you agree to in paragraph 3': user_admits_some_paragraph_3
    maxlength: 68
    show if: 
      variable: allegation_3
      is: admit_but_deny_3
  - "Include what you disagree to or that you do not know in paragraph 3": user_denies_doesnt_know_paragraph_3
    maxlength: 66
    show if: 
      variable: allegation_3
      is: admit_but_deny_3
---
id: Paragraph 4 of the Complaint for Divorce
question: |
  Paragraph 4
Subquestion: |
 Looking at paragrah 4 of the Complaint, decide if you agree, disagree, or do not know the information. 
fields:
  - no label: allegation_4
    datatype: radio
    choices:
      - 'I agree with that is stated in paragraph 4': admit_4
      - 'I disagree with what is stated in paragraph 4': deny_4
      - "I agree with some things that are stated in paragraph 4 but some things I disagree with or do not know.": admit_but_deny_4
  - 'Include what you agree to in paragraph 4': user_admits_some_paragraph_4
    maxlength: 68
    show if: 
      variable: allegation_4
      is: admit_but_deny_4
  - "Include what you disagree to or that you do not know in paragraph 4": user_denies_doesnt_know_paragraph_4
    maxlength: 66
    show if: 
      variable: allegation_4
      is: admit_but_deny_4
---
id: Paragraph 5 of the Complaint for Divorce
question: |
  Paragraph 5
Subquestion: |
 Looking at paragrah 5 of the Complaint, decide if you agree, disagree, or do not know the information. 
fields:
  - no label: allegation_5
    datatype: radio
    choices:
      - 'I agree with that is stated in paragraph 5': admit_5
      - 'I disagree with what is stated in paragraph 5': deny_5
      - "I agree with some things that are stated in paragraph 5 but some things I disagree with or do not know.": admit_but_deny_5
  - 'Include what you agree to in paragraph 5': user_admits_some_paragraph_5
    maxlength: 68
    show if: 
      variable: allegation_5
      is: admit_but_deny_5
  - "Include what you disagree to or that you do not know in paragraph 5": user_denies_doesnt_know_paragraph_5
    maxlength: 66
    show if: 
      variable: allegation_5
      is: admit_but_deny_5
---
id: Relief Sought
question: |
  What relief do you need from the court?
fields:
  - no label: relief_1
    datatype: radio
    choices:
      - 'The court to grant the divorce': grant_divorce
      - 'The court to deny the relief requested in paragraph 6 of the Complaint for Divorce': deny_relief_requested
      - 'The court to dimiss the Complaint for Divorce': dimiss_complaint
      - 'The court to grant the relief requested in the attached counterclaim for divorce': grant_relief_requested_in_counterclaim
---
id: attorney name
question: |
  Are you an attorney filing out this form?
fields:
  - no label: has_attorney
    datatype: yesnoradio
  - First name: attorneys[0].name.first
    show if: has_attorney
  - Middle name: attorneys[0].name.middle
    required: False
    show if: has_attorney
  - Last name: attorneys[0].name.last
    show if: has_attorney
  - Suffix: attorneys[0].name.suffix
    code: |
      name_suffix()
    required: False
    show if: has_attorney   
  - BBO number: attorney_BBO
    show if: has_attorney
  - Street address: attorneys[0].address.address
    address autocomplete: True
    show if: has_attorney
  - Unit: attorneys[0].address.unit
    required: False
    show if: has_attorney
  - City: attorneys[0].address.city
    show if: has_attorney
  - State: attorneys[0].address.state
    default: MA   
    code: |
      states_list()   
    show if: has_attorney
  - Zip: attorneys[0].address.zip
    show if: has_attorney
  - Phone: attorneys[0].phone_number
    show if: has_attorney
  - Email: attorneys[0].email
    show if: has_attorney
---
id: Certificate of Service
question: |
  Are you ready to deliver this Answer to the other side?
subquestion: |
  A Certificate of Service is a way for you to let the court know that a copy of this Answer to a Complaint for Divorce was sent to the other party.
  
  You can proceed through this form and add a Certificate of Service later if you are not ready to send one at this time. 
fields:
  - no label : service_ready
    datatype: yesnoradio
  - Name of sender: service_by
    maxlength: 42
    show if: service_ready
  - Certificate of Serice was: certificate_choice_1
    datatype: radio
    show if: service_ready
    choices: 
      - Sent by first class mail: certificate_sent_first_class_mail
      - Hand delivered: certificate_hand_delivered
  - Name of the person that is receving it: certificate_sent_to_name
    maxlength: 52
    show if: service_ready
  - Address it is being sent to: certificate_sent_to_address
    maxlength: 56
    show if: service_ready
  - Date being sent: certificate_sent_date
    datatype: date
    show if: service_ready
---
---
progress: 100
mandatory: True
id: Your form is ready to download and file
question: |
  Your form is ready to download and file
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  Below is a preview of your form.
  
  ${pdf_concatenate(AnswertoComplaintforDivorce_attachment['final'], filename='AnswertoComplaintforDivorce.pdf') }
need: AnswertoComplaintforDivorce
attachment code: AnswertoComplaintforDivorce_attachment['final']
---
objects:
  - AnswertoComplaintforDivorce_attachment: DADict
---
attachment:
    variable name: AnswertoComplaintforDivorce_attachment[i]
    name: Divorce Answer
    filename: Divorce_Answer
    skip undefined: True
    pdf template file: Answer-to-Complaint-for-Divorce.pdf
    fields: 
      - "docket_number": ${ docket_number }
      - "court_division": ${ courts[0].division }
      - "plaintiff": ${ plaintiffs }
      - "defendant": ${ defendants }
      # If it is a signature, test which file version we're expecting. leave it empty unless it's the final attachment version
      - "user_signature": ${ users[0].signature if i == 'final' else '' }
      - "defendant__1": ${ defendants }
      - "user_first_name": 
      - "user_address_street": ${ users[0].address.address }
      - "user_address_street2": ${ users[0].address.unit }
      - "user_address_city": ${ users[0].address.city }
      - "user_address_state": ${ users[0].address.state }
      - "user_address_zip": ${ users[0].address.zip }
      - "user_email": ${ users[0].email }
      - "user_phone": ${ users[0].phone_numbers() }
      - "plaintiff__1": ${ plaintiffs }
      - "defendant__2": ${ defendants }
      - "docket_number__1": ${ docket_number }
      # If it is a signature, test which file version we're expecting. leave it empty unless it's the final attachment version
      - "attorney_signature": ${ attorneys[0].signature if i == 'final' else '' }
      - "attorney": ${ attorneys[0] if has_attorney else '' }
      - "attorney_address_street": ${ attorneys[0].address.address if has_attorney else '' }
      - "attorney_address_street2": ${ attorneys[0].address.unit if has_attorney else '' }
      - "attorney_address_state": ${ attorneys[0].address.state if has_attorney else '' }
      - "attorney_address_city": ${ attorneys[0].address.city if has_attorney else '' }
      - "attorney_address_zip": ${ attorneys[0].address.zip if has_attorney else '' }
      - "attorney_phone": ${ attorneys[0].phone_number if has_attorney else '' }
      - "attorney_email": ${ attorneys[0].email if has_attorney else '' }
      - "complaint_file_date": ${ complaint_file_date }
      - "admit_1": ${ allegation_1 == "admit_1" }
      - "deny_1": ${ allegation_1 == "deny_1" }
      - "admit_but_deny_1": ${ allegation_1 == "admit_but_deny_1" }
      - "user_admits_some_paragraph_1": ${ user_admits_some_paragraph_1 }
      - "user_denies_doesnt_know_paragraph_1": ${ user_denies_doesnt_know_paragraph_1 }
      - "admit_2": ${ allegation_2 == "admit_2" }
      - "deny_2": ${ allegation_2 == "deny_2" }
      - "admit_but_deny_2": ${ allegation_2 == "admit_but_deny_2" }
      - "user_admits_some_paragraph_2": ${ user_admits_some_paragraph_2 }
      - "user_denies_doesnt_know_paragraph_2": ${ user_denies_doesnt_know_paragraph_2 }
      - "admit_3": ${ allegation_3 == "admit_3" }
      - "deny_3": ${ allegation_3 == "deny_3" }
      - "admit_but_deny_3": ${ allegation_3 == "admit_but_deny_3" }
      - "user_admits_some_paragraph_3": ${ user_admits_some_paragraph_3 }
      - "user_denies_doesnt_know_paragraph_3": ${ user_denies_doesnt_know_paragraph_3 }
      - "admit_4": ${ allegation_4 == "admit_4" }
      - "deny_4": ${ allegation_4 == "deny_4" }
      - "admit_but_deny_4": ${ allegation_4 == "admit_but_deny_4" }
      - "user_admits_some_paragraph_4": ${ user_admits_some_paragraph_4 }
      - "user_denies_doesnt_know_paragraph_4": ${ user_denies_doesnt_know_paragraph_4 }
      - "admit_5": ${ allegation_5 == "admit_5" }
      - "deny_5": ${ allegation_5 == "deny_5" }
      - "admit_but_deny_5": ${ allegation_5 == "admit_but_deny_5" }
      - "user_admits_some_paragraph_5": ${ user_admits_some_paragraph_5 }
      - "user_denies_doesnt_know_paragraph_5": ${ user_denies_doesnt_know_paragraph_5 }
      - "grant_divorce": ${ relief_1 == "grant_divorce" }
      - "deny_relief_requested": ${ relief_1 == "deny_relief_requested" }
      - "complaint_file_date__1": ${ complaint_file_date }
      - "dimiss_complaint": ${ relief_1 == "dimiss_complaint" }
      - "complaint_file_date__2": ${ complaint_file_date }
      - "grant_relief_requested_in_counterclaim": ${ relief_1 == "grant_relief_requested_in_counterclaim" }
      - "date__1": ${ signature_date }
      - "attorney_BBO": ${ attorney_BBO if has_attorney else '' }
      - "service_by": ${ service_by }
      - "certificate_sent_first_class_mail": ${ certificate_choice_1 == "certificate_sent_first_class_mail" }
      - "certificate_hand_delivered": ${ certificate_choice_1 == "certificate_hand_delivered" }
      - "certificate_sent_to_name": ${ certificate_sent_to_name }
      - "certificate_sent_date": ${ certificate_sent_date if service_ready else '' }
      - "certificate_sent_to_address": ${ certificate_sent_to_address }
      - "date__2": ${ signature_date if service_ready else '' }
      - "service_signature": ${ service_signature }
---
id: AnswertoComplaintforDivorce review screen
event: review_AnswertoComplaintforDivorce
question: |
  Placeholder Review Screen
subquestion: |
  Edit your answers below
review: 
  - Edit: complaint_file_date
    button: |
      File Date of Complaint for Divorce:
      ${ complaint_file_date.format() }
  - Edit: admit_1
    button: |
      The Defendant admits all allegations in paragraph 1.:
      ${ word(yesno(admit_1)) }
  - Edit: deny_1
    button: |
      The Defendant denies all allegations in paragraph 1.:
      ${ word(yesno(deny_1)) }
  - Edit: admit_but_deny_1
    button: |
      The Defendant admits some allegations but denies/doesn't know the rest in paragraph 1.:
      ${ word(yesno(admit_but_deny_1)) }
  - Edit: user_admits_some_paragraph_1
    button: |
      The Defendant admits the following allegations in paragraph 1.:
      ${ user_admits_some_paragraph_1 }
  - Edit: user_denies_doesnt_know_paragraph_1
    button: |
      The Defendant denies/doesn't know the following allegations in paragraph 1.:
      ${ user_denies_doesnt_know_paragraph_1 }
  - Edit: admit_2
    button: |
      The Defendant admits all allegations in paragraph 2.:
      ${ word(yesno(admit_2)) }
  - Edit: deny_2
    button: |
      The Defendant denies all allegations in paragraph 2.:
      ${ word(yesno(deny_2)) }
  - Edit: admit_but_deny_2
    button: |
      The Defendant admits some allegations but denies/doesn't know the rest in paragraph 2.:
      ${ word(yesno(admit_but_deny_2)) }
  - Edit: user_admits_some_paragraph_2
    button: |
      The Defendant admits the following allegations in paragraph 2.:
      ${ user_admits_some_paragraph_2 }
  - Edit: user_denies_doesnt_know_paragraph_2
    button: |
      The Defendant denies/doesn't know the following allegations in paragraph 2.:
      ${ user_denies_doesnt_know_paragraph_2 }
  - Edit: admit_3
    button: |
      The Defendant admits all allegations in paragraph 3.:
      ${ word(yesno(admit_3)) }
  - Edit: deny_3
    button: |
      The Defendant denies all allegations in paragraph 3.:
      ${ word(yesno(deny_3)) }
  - Edit: admit_but_deny_3
    button: |
      The Defendant admits some allegations but denies/doesn't know the rest in paragraph 3.:
      ${ word(yesno(admit_but_deny_3)) }
  - Edit: user_admits_some_paragraph_3
    button: |
      The Defendant admits the following allegations in paragraph 3.:
      ${ user_admits_some_paragraph_3 }
  - Edit: user_denies_doesnt_know_paragraph_3
    button: |
      The Defendant denies/doesn't know the following allegations in paragraph 3.:
      ${ user_denies_doesnt_know_paragraph_3 }
  - Edit: admit_4
    button: |
      The Defendant admits all allegations in paragraph 4.:
      ${ word(yesno(admit_4)) }
  - Edit: deny_4
    button: |
      The Defendant denies all allegations in paragraph 4.:
      ${ word(yesno(deny_4)) }
  - Edit: admit_but_deny_4
    button: |
      The Defendant admits some allegations but denies/doesn't know the rest in paragraph 4.:
      ${ word(yesno(admit_but_deny_4)) }
  - Edit: user_admits_some_paragraph_4
    button: |
      The Defendant admits the following allegations in paragraph 4.:
      ${ user_admits_some_paragraph_4 }
  - Edit: user_denies_doesnt_know_paragraph_4
    button: |
      The Defendant denies/doesn't know the following allegations in paragraph 4.:
      ${ user_denies_doesnt_know_paragraph_4 }
  - Edit: admit_5
    button: |
      The Defendant admits all allegations in paragraph 5.:
      ${ word(yesno(admit_5)) }
  - Edit: deny_5
    button: |
      The Defendant denies all allegations in paragraph 5.:
      ${ word(yesno(deny_5)) }
  - Edit: admit_but_deny_5
    button: |
      The Defendant admits some allegations but denies/doesn't know the rest in paragraph 5.:
      ${ word(yesno(admit_but_deny_5)) }
  - Edit: user_admits_some_paragraph_5
    button: |
      The Defendant admits the following allegations in paragraph 5.:
      ${ user_admits_some_paragraph_5 }
  - Edit: user_denies_doesnt_know_paragraph_5
    button: |
      The Defendant denies/doesn't know the following allegations in paragraph 5.:
      ${ user_denies_doesnt_know_paragraph_5 }
  - Edit: grant_divorce
    button: |
      The Defendant requests that the court grant the divorce.:
      ${ word(yesno(grant_divorce)) }
  - Edit: deny_relief_requested
    button: |
      The Defendant requests that the court deny the relief requested in paragraph 6 of the Complaint for Divorce.:
      ${ word(yesno(deny_relief_requested)) }
  - Edit: dimiss_complaint
    button: |
      The Defendant requests that the court dimiss the Complaint for divorce.:
      ${ word(yesno(dimiss_complaint)) }
  - Edit: grant_relief_requested_in_counterclaim
    button: |
      The Defendant requests that the court grant the relief requested in the attached counterclaim for divorce.:
      ${ word(yesno(grant_relief_requested_in_counterclaim)) }
  - Edit: date
    button: |
      Date:
      ${ date.format() }
  - Edit: user_phone
    button: |
      Phone Number:
      ${ user_phone }
  - Edit: attorney_address_street
    button: |
      Attorney Street Address:
      ${ attorney_address_street if has_attorney else '' }
  - Edit: attorney_phone
    button: |
      Attorney Phone Number:
      ${ attorney_phone if has_attorney else '' }
  - Edit: attorney_BBO
    button: |
      Attorney BBO:
      ${ attorney_BBO if has_attorney else '' }
  - Edit: service_by
    button: |
      Certificate of Service sent by:
      ${ service_by }
  - Edit: certificate_sent_first_class_mail
    button: |
      Certificate of Service sent by first class mail.:
      ${ word(yesno(certificate_sent_first_class_mail)) }
  - Edit: certificate_hand_delivered
    button: |
      Certificate of Service hand delivered.:
      ${ word(yesno(certificate_hand_delivered)) }
  - Edit: certificate_sent_to_name
    button: |
      Certificate of Service was sent to:
      ${ certificate_sent_to_name }
  - Edit: certificate_sent_date
    button: |
      Date that Certificate of Service was sent:
      ${ certificate_sent_date.format() }
  - Edit: certificate_sent_to_address
    button: |
      Address that Certificate of Service was sent to:
      ${ certificate_sent_to_address }
  - Edit: docket_numbers
    button: |
      docket_numbers:
      ${ docket_numbers }
  - Edit: courts[0].division
    button: |
      courts[0].division:
      ${ courts[0].division }
  - Edit: plaintiffs
    button: |
      plaintiffs:
      ${ plaintiffs }
  - Edit: defendants
    button: |
      defendants:
      ${ defendants }
  - Edit: users[0].signature
    button: |
      users[0].signature:
      ${ users[0].signature }
  - Edit: users[0].address.address
    button: |
      users[0].address.address:
      ${ users[0].address.address }
  - Edit: users[0].address.unit
    button: |
      users[0].address.unit:
      ${ users[0].address.unit }
  - Edit: users[0].address.city
    button: |
      users[0].address.city:
      ${ users[0].address.city }
  - Edit: users[0].address.state
    button: |
      users[0].address.state:
      ${ users[0].address.state }
  - Edit: users[0].address.zip
    button: |
      users[0].address.zip:
      ${ users[0].address.zip }
  - Edit: users[0].email
    button: |
      users[0].email:
      ${ users[0].email }
  - Edit: attorneys[0].signature
    button: |
      attorneys[0].signature:
      ${ attorneys[0].signature }
  - Edit: attorneys
    button: |
      attorneys:
      ${ attorneys if has_attorney else '' }
  - Edit: attorneys[0].address.unit
    button: |
      attorneys[0].address.unit:
      ${ attorneys[0].address.unit if has_attorney else '' }
  - Edit: attorneys[0].address.state
    button: |
      attorneys[0].address.state:
      ${ attorneys[0].address.state if has_attorney else '' }
  - Edit: attorneys[0].address.city
    button: |
      attorneys[0].address.city:
      ${ attorneys[0].address.city if has_attorney else '' }
  - Edit: attorneys[0].address.zip
    button: |
      attorneys[0].address.zip:
      ${ attorneys[0].address.zip if has_attorney else '' }
  - Edit: attorneys[0].email
    button: |
      attorneys[0].email:
      ${ attorneys[0].email if has_attorney else '' }
  - Edit: service_signature
    button: |
      service_signature:
      ${ service_signature }